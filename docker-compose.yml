version: "3.3"

services:

  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    command:
      - "--log.level=WARN"
      - "--log=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--accessLog=true"
      - "--accessLog.filePath=/traefik.log"
      - "--accessLog.bufferingSize=100" # Configuring a buffer of 100 lines
      - "--accessLog.filters.statusCodes=400-499"
      - "--providers.file.directory=/rules"
      - "--providers.file.watch=true"  
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.traefik.address=:8081"
      - "--serversTransport.insecureSkipVerify=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=$CF_EMAIL"
      - "--certificatesresolvers.myresolver.acme.storage=/acme/acme.json"
      - "--entrypoints.websecure.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22"
    ports:
      - "443:443"
      - "8081:8081"
    environment:
      - "CF_API_EMAIL=$CF_EMAIL"
      - "CF_API_KEY=$CF_API"
    volumes:
      - "./acme:/acme"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks: 
      - "proxy_net"

  unifi:
    image: "jacobalberty/unifi:stable"
    container_name: "unifi"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`jarvis.$DOMAIN`)"
      - "traefik.http.routers.unifi.entrypoints=websecure"
      - "traefik.http.routers.unifi.tls.certresolver=myresolver"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"    
    restart: "always"
    volumes: 
      - "./unifi:/unifi"
    ports:
      - "3478:3478/udp" # STUN
      - "6789:6789/tcp" # Speed test
      - "8080:8080/tcp" # Device/ controller comm.
      - "8443:8443/tcp" # Controller GUI/API as seen in a web browser
      - "8880:8880/tcp" # HTTP portal redirection
      - "8843:8843/tcp" # HTTPS portal redirection
      - "10001:10001/udp" # AP discovery
    networks: 
      - "proxy_net"
  
  guacd:
    image: "guacamole/guacd"
    restart: "always"
    container_name: "guacd"
    depends_on: 
      - "traefik"
    networks:
      - "proxy_net"
 
  mariadb:
    image: "linuxserver/mariadb:latest"
    restart: "always"
    container_name: "mariadb"
    ports:
      - "3306:3306" 
    environment:
      - "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT"
    volumes:
      - "./mariadb/data:/config"
    networks:
      - "proxy_net"

  guacamole:
    image: "guacamole/guacamole"
    container_name: "guacamole"
    restart: "always"
    ports:
      - "9091:8080"
    environment:
      - "MYSQL_HOSTNAME=mariadb"
      - "MYSQL_DATABASE=guacamole"
      - "MYSQL_USER=mariadbuser"
      - "MYSQL_PASSWORD=mariadbpwd"
      - "GUACD_HOSTNAME=guacd"
    networks:
      - "proxy_net"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guacamole.rule=Host(`remote.$DOMAIN`)"
      - "traefik.http.routers.guacamole.entrypoints=websecure"
      - "traefik.http.routers.guacamole.tls.certResolver=myresolver"
      - "traefik.http.services.guacamole.loadbalancer.server.port=8080"
      - "traefik.http.services.guacamole.loadbalancer.server.scheme=http"
      - "traefik.http.middlewares.addguac.addprefix.prefix=/guacamole"
      - "traefik.http.routers.guacamole.middlewares=authelia@docker,addguac"  
  
  hassio:
    container_name: "hassio"
    image: "homeassistant/home-assistant:stable"
    volumes:
      - "./hassio:/config"
    environment:
      - "TZ=Europe/Amsterdam"
    restart: "always"
    networks:
      - "proxy_net"
    ports:
      - "8123:8123"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hassio.rule=Host(`hassio.$DOMAIN`)"
      - "traefik.http.routers.hassio.entrypoints=websecure"
      - "traefik.http.routers.hassio.tls.certresolver=myresolver"
      - "traefik.http.services.hassio.loadbalancer.server.port=8123"
      - "traefik.http.services.hassio.loadbalancer.server.scheme=http"
      - "traefik.http.routers.hassio.middlewares=authelia@docker"
  
  authelia:
    image: "authelia/authelia"
    container_name: "authelia"
    volumes:
      - "./authelia:/var/lib/authelia"
      - "./authelia/configuration.yml:/etc/authelia/configuration.yml:ro"
      - "./authelia/users_database.yml:/etc/authelia/users_database.yml"
    networks:
      - "proxy_net"
    expose:
      - "9091"
    restart: "unless-stopped"
    environment: 
      - "TZ=Europe/Amsterdam"
        #- "AUTHELIA_DUO_API_SECRET_KEY_FILE=$DUO"
        #- "AUTHELIA_JWT_SECRET_FILE=$JWT"
        #- "AUTHELIA_SESSION_SECRET_FILE=$AUTHSESS"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.$DOMAIN`)'
      - 'traefik.http.routers.authelia.entrypoints=websecure'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.certresolver=myresolver'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.lvqhn.net'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User, Remote-Groups'
      - 'traefik.http.services.authelia.loadbalancer.server.port=9091'
  
  elastic:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.6.2"
    container_name: "elastic"
    environment:
      - "node.name=elastic"
      - "discovery.type=single-node"
    volumes:
      - "./elk:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
    networks:
      - "proxy_net"

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.6.2"
    container_name: "kibana"
    environment: 
      - "ELASTICSEARCH_HOSTS=http://elastic:9200"
    volumes: 
      - "./elk/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml" 
    ports:
      - "5601:5601"
    networks:
      - "proxy_net"
  
  portainer:
    image: "portainer/portainer"
    restart: "always"
    networks: 
      - "proxy_net"
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./portainer:/data"
networks:
        proxy_net:
